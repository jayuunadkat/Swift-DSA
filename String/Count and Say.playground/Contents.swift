/// [Count and Say](https://leetcode.com/problems/count-and-say/)
///
/// The `countAndSay` function generates the nth term in the "count-and-say" sequence,
/// where each term is generated by describing the previous term's digits in terms of count and value.
///
/// For example:
/// - 1st term: `"1"`
/// - 2nd term: `"11"` (one 1)
/// - 3rd term: `"21"` (two 1s)
/// - 4th term: `"1211"` (one 2, one 1)
/// - 5th term: `"111221"` (one 1, one 2, two 1s)
///
/// - Parameter n: The position in the sequence (1-indexed).
/// - Returns: A string representing the nth term in the count-and-say sequence.
class Solution {
    func countAndSay(_ n: Int) -> String {
        var result = "1"

        for _ in 1..<n {
            var temp = ""
            var count = 1
            let chars = Array(result)

            for j in 1..<chars.count {
                if chars[j] == chars[j - 1] {
                    count += 1
                } else {
                    temp += "\(count)\(chars[j - 1])"
                    count = 1
                }
            }

            temp += "\(count)\(chars.last!)"
            result = temp
        }

        return result
    }
}
